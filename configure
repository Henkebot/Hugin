#!/usr/bin/perl -w

# this is a very simple configure script, it just writes
# the config.h and path.mk files


sub print_help{
print <<EOF;
configure - prepare hugin for compilation

options:
  --help           this text
  --prefix prefix  install program to prefix
  --platform=(unix|win32) specify platform.
                   defaults to unix.
  --debug          enables debug output and assertations
EOF
}



use Getopt::Long;
my $prefix = "/usr/local";

$result = GetOptions ("prefix=s" => \$prefix,    # string
                      "platform=s" => \$platform, # string
                      "debug"  => \$debug,  # flag
                      "help"  => \$help);  # flag

if (!$result) {
    print_help();
    exit(1);
}
if ($help) {
    print_help();
    exit(0);
}

if (!$platform) {
    $platform = "unix";
}

if (!($platform eq "unix" || $platform eq "win32")) {
   print "Invalid platform specified: $platform\n";
   print_help();
   exit(1);
}

print "checking for wxwin32 2.4 or greater: ";
$_ = `wx-config --version`;

chomp;
m/^(\d).(\d).(\d)/;
if (($1 == 2 && $2 >= 4) || $1 >2 ) {
    print "found\n";
} else {
    print "not found\n";
    exit(1);
}

my $WXWIN_CFLAGS=`wx-config --cxxflags`;
my $WXWIN_LFLAGS=`wx-config --libs`;
chomp($WXWIN_CFLAGS);
chomp($WXWIN_LFLAGS);

my $EXTRA_CFLAGS;
if ($debug) {
#    $WXWIN_CFLAGS="$WXWIN_CFLAGS -D__WXDEBUG__";
    $EXTRA_CFLAGS="$EXTRA_CFLAGS -g -DDEBUG";
} else {
    $EXTRA_CFLAGS="$EXTRA_CFLAGS -O2";
}

print "checking for xrc extension of wxwin.";
my $XRC_LFLAGS;
if ($platform eq "win32") {
    $XRC_LFLAGS="-lwx_msw_xrc-2.4";
} elsif ($platform eq "unix") {
    $XRC_LFLAGS="-lwx_gtk_xrc-2.4";
}

print "\n\nConfiguration summary for hugin:\n";
print "  platform: $platform\n";
print "  prefix: $prefix\n";
if ($debug) {
    print "  debug: enabled\n";
} else {
    print "  debug: disabled\n";
}
print "\n";

print "Creating src/makefiles/config.mk\n";
open(CONF_T,"<src/makefiles/config.mk.tmpl");
open(CONF,">src/makefiles/config.mk");

while (<CONF_T>) {
    s/__PREFIX__/$prefix/g;
    s/__EXTRA_CFLAGS__/$EXTRA_CFLAGS/g;
    s/__WXWIN_CFLAGS__/$WXWIN_CFLAGS/g;
    s/__WXWIN_LFLAGS__/$WXWIN_LFLAGS/g;
    s/__XRC_LFLAGS__/$XRC_LFLAGS/g;
    s/__PLATFORM__/$platform/g;
    print CONF;
}
close (CONF_T);
close (CONF);

print "Creating src/include/hugin/config.h\n";
open(CONF_T,"<src/include/hugin/config.h.tmpl");
open(CONF,">src/include/hugin/config.h");

while (<CONF_T>) {
    s/__PREFIX__/$prefix/g;
    print CONF;
}
close (CONF_T);
close (CONF);

print "Creating src/PanoImage/makefile\n";
open(CONF_T,"<src/PanoImage/makefile.unx.tmpl");
open(CONF,">src/PanoImage/makefile");

while (<CONF_T>) {
    s/__PREFIX__/$prefix/g;
    print CONF;
}
close (CONF_T);
close (CONF);

print "Creating src/hugin/hugin.desktop\n";
open(CONF_T,"<src/hugin/hugin.desktop.tmpl");
open(CONF,">src/hugin/hugin.desktop");

while (<CONF_T>) {
    s/__PREFIX__/$prefix/g;
    print CONF;
}
close (CONF_T);
close (CONF);

print <<EOT

Configuration finished.

Run "make" to compile hugin.
After compilation use "make install" to install hugin
into the system

EOT
