External Programs(This is for 10.4 or above)HOWTO:1. Download the source. You typically want to place it in the "ExternalPrograms" folder.2. Edit ExternalPrograms/scripts/SetEnv-*.txt file appropriately, especially the myREPOSITORYDIR variable.3. Open a Terminal window (bash is preferred).5. 'cd' into the directory of source you want to compile. (eg. 'cd ExternalPrograms/jpeg-6b')4. Set the variables for the compilation. (eg. 'source ../scripts/SetEnv-universal.txt')6. Using the appropriate shell script, build the source. (eg. 'sh ../scripts/libjpeg.sh')RESULT:The programs and libraries will be installed into $myREPOSITORYDIR, which you can manage independently from the systems you are currently using (e.g /usr, /usr/local, /opt, /sw).TIPS:When compiling programs from source specifying the above directory as prefix. You probably have to specify the correct SDK (-isysroot) and MacOS target version (-mmacosx-version-min) as well.
LIBRARIES:The following sets are recommended and assumed for building Hugin. Different versions may require editing the version numbers in the scripts. [Static Build for distributable tools]static/boost (1.34.1)static/libexpat (2.0.1)static/libjpeg (6b)static/libpng (1.2.24)static/libtiff (3.8.3)static/ilmbase (1.0.1)static/openexr16 (1.6.1)static/pano13 (2.9.12 or svn)static/wxmac28 (2.8.7)static/libexiv2 (0.16)static/lcms (1.17)static/glew (1.5.0)static/libxmi (1.2)gnumake (Darwin 9.1/gnumake-119/make)enblend31 (cvs or 3.1)[Dynamic Build for distributable Hugin.app]boost (1.34.1)libexpat (2.0.1)libjpeg (6b)libpng (1.2.24)libtiff (3.8.3)ilmbase (1.0.1)openexr16 (1.6.1)pano13 (2.9.12 or svn)wxmac28 (2.8.7)static/libexiv2 (0.16)static/lcms (1.17)static/glew (1.5.0)static/libxmi (1.2)gnumake (Darwin 9.1/gnumake-119/make)enblend31 (cvs or 3.1)

LICENSE:
The scripts for compiling universal builds are originally copyrighted by Ippei Ukai (2007-2008), and distributed under the modified BSD license.

$Id: howto.txt 1902 2007-02-04 22:27:47Z ippei $